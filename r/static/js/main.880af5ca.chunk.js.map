{"version":3,"sources":["question.module.css","App.module.css","exam.module.css","question.js","exam.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","randomInt","min","max","range","Math","floor","random","randomBool","initArray","size","initFunction","arr","Array","i","OperatorTreeNode","left","right","val","this","toString","leftStr","priority","rightStr","leftRes","result","rightRes","QuestionData","operatorTree","answer","parseInt","res","random20","dataList","n1","n2","on","data","push","on1","on2","sort","a","b","random99","operator","genOneRandom4","steps","Error","stepOrder","operatorChoice","operatorValue","nodeMap","operatorIndex","leftNode","rightNode","node","forEach","n","random4","r","console","log","Infinity","randomAddSub","scope","Question","index","useState","setAnswer","keyboardOpen","setKeyboardOpen","useEffect","str","setAnswerVaule","v","input","substring","length","className","Style","question","type","value","onChange","e","target","keyboard","onClick","Result","isCorrect","isWrong","Exam","setIndex","qd","exam","src","alt","disabled","STATUS","INIT","PLAYING","END","App","startTime","setStartTime","endTime","setEndTime","score","setScore","status","setStatus","allQuestionData","setQuestions","start","genQuestionData","genAllQuestionData","Date","getTime","app","welcome","info","href","end","role","aria-label","map","key","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.880af5ca.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"isCorrect\":\"question_isCorrect__3pmnd\",\"isWrong\":\"question_isWrong__2ssu5\",\"index\":\"question_index__3PcR4\",\"result\":\"question_result__3IQCY\",\"question\":\"question_question__2XbRE\",\"keyboard\":\"question_keyboard__3JERA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__1VlIa\",\"start\":\"App_start__3CGHP\",\"welcome\":\"App_welcome__1cuo2\",\"end\":\"App_end__2Hlrs\",\"info\":\"App_info__2l2qW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"exam\":\"exam_exam__2UC2w\"};","import React, {useState, useEffect} from 'react';\r\nimport Style from './question.module.css';\r\n\r\nconst randomInt = (min, max) => {\r\n  if(max === min) {\r\n    return min;\r\n  }\r\n  const range = (max > min ? (max - min) : (min - max)) + 1;\r\n  return Math.floor(Math.random() * range) + min;\r\n};\r\n\r\nconst randomBool = () => {\r\n  return randomInt(0, 1) > 0;\r\n};\r\n\r\nconst initArray = (size, initFunction) => {\r\n  const arr = new Array(size);\r\n  for(let i=0;i<size;i++){\r\n    arr[i] = initFunction(i);\r\n  }\r\n  return arr;\r\n};\r\n\r\nclass OperatorTreeNode {\r\n  constructor(left, right, val){\r\n    this.val = val;\r\n    this.left = left;\r\n    this.right = right;\r\n  }\r\n\r\n  get priority(){\r\n    if ((typeof this.val) === 'number'){\r\n      return 10000;\r\n    } else if (this.val === '×' || this.val === '÷') {\r\n      return 2;\r\n    } else if (this.val === '+' || this.val === '-') {\r\n      return 1;\r\n    }\r\n    return 0;\r\n  }\r\n\r\n  get result() {\r\n    if ((typeof this.val) === 'number'){\r\n      return this.val;\r\n    }\r\n    const leftRes =(typeof this.left) === 'number' ? this.left : this.left.result;\r\n    const rightRes =(typeof this.right) === 'number' ? this.right : this.right.result;\r\n    if(this.val === '+') {\r\n      return leftRes + rightRes;\r\n    } else if(this.val === '-') {\r\n      return leftRes - rightRes;\r\n    } else if(this.val === '×') {\r\n      return leftRes * rightRes;\r\n    } else if(this.val === '÷') {\r\n      return leftRes / rightRes;\r\n    }\r\n    return 0;\r\n  }\r\n\r\n  toString() {\r\n    if ((typeof this.val) === 'number'){\r\n      return this.val.toString();\r\n    }\r\n\r\n    let leftStr = this.left.toString();\r\n    if (this.left instanceof OperatorTreeNode) {\r\n      if (this.left.priority < this.priority){\r\n        leftStr = `(${leftStr})`;\r\n      }\r\n    }\r\n\r\n    let rightStr = this.right.toString();\r\n    if (this.right instanceof OperatorTreeNode) {\r\n      if (this.right.priority <= this.priority){\r\n        rightStr = `(${rightStr})`;\r\n      }\r\n    }\r\n\r\n    return `${leftStr}${this.val}${rightStr}`;\r\n  }\r\n}\r\n\r\nclass QuestionData {\r\n  constructor(operatorTree){\r\n    this.operatorTree = operatorTree;\r\n    this.answer = '';\r\n  }\r\n\r\n  get res(){\r\n    return this.operatorTree.result;\r\n  }\r\n\r\n  toString(){\r\n    return this.operatorTree.toString();\r\n  }\r\n\r\n  isCorrect(){\r\n    return this.answer !== '' && parseInt(this.answer) === this.res;\r\n  }\r\n}\r\n\r\nconst random20 = () => {\r\n  const dataList = [];\r\n  for (let i=0;i<5;i++){\r\n    const n1 = randomInt(3, 9);\r\n    const n2 = randomInt(10-n1, 9);\r\n    const on = randomBool() ? new OperatorTreeNode(n1, n2, '+') : new OperatorTreeNode(n2, n1, '+'); \r\n    const data = new QuestionData(on);\r\n    dataList.push(data);\r\n  }\r\n\r\n  for (let i=0;i<5;i++){\r\n    dataList.push(\r\n      new QuestionData(\r\n        new OperatorTreeNode(\r\n          randomInt(3, 18), \r\n          randomInt(0, 2), \r\n          randomBool() ? '+' : '-')\r\n      )\r\n    );\r\n  }\r\n\r\n  for (let i=0;i<5;i++){\r\n    const n1 = randomInt(3, 9);\r\n    const n2 = randomInt(10-n1, 9);\r\n    const data = new QuestionData(new OperatorTreeNode(n1 + n2, n2, '-'));\r\n    dataList.push(data);\r\n  }\r\n\r\n  for (let i=0;i<5;i++){\r\n    const n1 = randomInt(3, 9);\r\n    const n2 = randomInt(10-n1, 9);\r\n    const on1 = randomBool() ? (\r\n        randomBool() ? new OperatorTreeNode(n1, n2, '+') : new OperatorTreeNode(n2, n1, '+')\r\n      ) : (new OperatorTreeNode(n2 + n1, n1, '-'))\r\n\r\n    const on2 = randomBool() ? new OperatorTreeNode(on1, randomInt(0, 20 - on1.result), '+') : new OperatorTreeNode(on1, randomInt(0, on1.result), '-'); \r\n    const data = new QuestionData(on2);\r\n    dataList.push(data);\r\n  }\r\n  dataList.sort((a, b) => randomInt(-1, 1));\r\n  return dataList;\r\n};\r\n\r\nconst random99 = () => {\r\n  const dataList = [];\r\n  for (let i=0;i<20;i++){\r\n    let n1 = randomInt(0, 9);\r\n    const n2 = randomInt(1, 9);\r\n    const operator = randomBool() ? '×' : '÷';\r\n    if (operator === '÷') {\r\n      const product = n1 * n2;\r\n      n1 = product;\r\n    }\r\n    const data = new QuestionData(new OperatorTreeNode(n1, n2, operator));\r\n    dataList.push(data);\r\n  }\r\n  return dataList;\r\n};\r\n\r\nconst genOneRandom4 = (steps) => {\r\n  if(steps<1){\r\n    throw new Error('Illegal arguments');\r\n  }\r\n  const stepOrder = initArray(steps, i => i).sort(() => randomInt(-1, 1));\r\n  const operatorChoice = ['+', '-', '×', '÷'];\r\n  const operatorValue = initArray(steps, () => operatorChoice[randomInt(0, 3)]);\r\n  const nodeMap = initArray(steps+1, () => randomInt(0, 9));\r\n\r\n  for (let i=0;i<steps;i++){\r\n    const operatorIndex = stepOrder[i];\r\n    const leftNode = nodeMap[operatorIndex];\r\n    const rightNode = nodeMap[operatorIndex + 1];\r\n    const node = new OperatorTreeNode(leftNode, rightNode, operatorValue[operatorIndex]);\r\n    nodeMap.forEach((n, i) => {\r\n      if (typeof n !== 'number') {\r\n        if (n === leftNode || n === rightNode) {\r\n          nodeMap[i] = node;\r\n        }\r\n      }\r\n    });\r\n    nodeMap[operatorIndex] = node;\r\n    nodeMap[operatorIndex + 1] = node;\r\n  }\r\n  return nodeMap[0];\r\n}\r\n\r\nconst random4 = () => {\r\n  const dataList = [];\r\n  for (let i=0;i<20;i++){\r\n    while(true){\r\n      \r\n      const node = genOneRandom4(3);\r\n      const r = node.result;\r\n      console.log('===');\r\n      if (r !== Infinity && r !== -Infinity && r === Math.floor(r) ) {\r\n        const data = new QuestionData(node);\r\n        dataList.push(data);\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  return dataList;\r\n};\r\n\r\nconst randomAddSub = (scope) => {\r\n  const dataList = [];\r\n  for (let i=0;i<20;i++){\r\n    let n1 = randomInt(0, scope);\r\n    const n2 = randomInt(0, scope - n1);\r\n    const operator = randomBool() ? '+' : '-';\r\n    if (operator === '-') {\r\n      const tmp = n1 + n2;\r\n      n1 = tmp;\r\n    }\r\n    const data = new QuestionData(new OperatorTreeNode(n1, n2, operator));\r\n    dataList.push(data);\r\n  }\r\n  return dataList;\r\n};\r\n\r\nfunction genQuestionData(type) {\r\n  if (type === '20+-') {\r\n    return random20();\r\n  } else if (type === '100+-') {\r\n    return randomAddSub(100);\r\n  } else if (type === '1000+-') {\r\n    return randomAddSub(1000);\r\n  } else if (type === '10000+-') {\r\n    return randomAddSub(10000);\r\n  } else if (type === '99*/') {\r\n    return random99();\r\n  } else if (type === '+-*/') {\r\n    return random4();\r\n  } else {\r\n    throw new Error('Unknown type');\r\n  }\r\n}\r\n\r\nfunction Question({data, index}){\r\n  const [answer, setAnswer] = useState('');\r\n  const [keyboardOpen, setKeyboardOpen] = useState(true);\r\n  useEffect(() => {\r\n    setAnswer(data.answer);\r\n  }, [data]);\r\n  const str = data.toString() + '=';\r\n\r\n  const setAnswerVaule = v => {\r\n    setAnswer(v);\r\n    data.answer = v;\r\n  };\r\n\r\n  const onChange = e => {\r\n    setAnswerVaule(e.target.value);\r\n  }\r\n\r\n  const input = v => {\r\n    if (v === 'back') {\r\n      if(answer) {\r\n        setAnswerVaule(answer.substring(0, answer.length - 1));\r\n      }\r\n    } else if (v === 'close') {\r\n      setKeyboardOpen(false);\r\n    } else {\r\n      setAnswerVaule(answer + v);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className={Style.index}>第{index + 1}题：</div>\r\n      <div className={Style.question}>{str}<input type=\"text\" value={answer} onChange={onChange}/></div>\r\n      {keyboardOpen && (<div className={Style.keyboard}>\r\n        <div>\r\n          <button onClick={()=>input('1')}>1</button>\r\n          <button onClick={()=>input('2')}>2</button>\r\n          <button onClick={()=>input('3')}>3</button>\r\n          <button onClick={()=>input('back')}>{'<='}</button>\r\n        </div>\r\n        <div>\r\n          <button onClick={()=>input('4')}>4</button>\r\n          <button onClick={()=>input('5')}>5</button>\r\n          <button onClick={()=>input('6')}>6</button>\r\n          <button onClick={()=>input('-')}>-</button>\r\n        </div>\r\n        <div>\r\n          <button onClick={()=>input('7')}>7</button>\r\n          <button onClick={()=>input('8')}>8</button>\r\n          <button onClick={()=>input('9')}>9</button>\r\n          <button onClick={()=>input('0')}>0</button>\r\n        </div>\r\n        <div>\r\n          <button onClick={()=>input('close')}>X</button>\r\n        </div>\r\n      </div>)}\r\n      {!keyboardOpen && (<button onClick={() => setKeyboardOpen(true)}>数字键盘</button>)}\r\n    </div>\r\n    \r\n  );\r\n}\r\n\r\nfunction Result({data}) {\r\n  const isCorrect = data.isCorrect();\r\n  return (\r\n    <div className={Style.result}>\r\n      <span className={(isCorrect ? Style.isCorrect : Style.isWrong)}>{data.toString() + ' = ' + data.answer}</span>\r\n      {!isCorrect && (<span>{data.res}</span>)}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport {Question, genQuestionData, Result};\r\n","import React, {useState} from 'react';\r\nimport {Question} from './question';\r\nimport Style from './exam.module.css';\r\n\r\nfunction Exam({data}) {\r\n  const [index, setIndex] = useState(0);\r\n  const qd = data[index];\r\n  const goPrevious = () => {\r\n    if (index > 0) {\r\n      setIndex(index - 1);\r\n    }\r\n  };\r\n  const goNext = () => {\r\n    if (index < (data.length - 1)) {\r\n      setIndex(index + 1);\r\n    }\r\n  };\r\n  return (\r\n    <div className={Style.exam}>\r\n      <img src=\"./hua.png\" alt=\"hua\"/>\r\n      <Question data={qd} answer={qd.answer} index={index}/>\r\n      <div>\r\n        <button onClick={goPrevious} disabled={index <= 0}>前一题</button>\r\n        <button onClick={goNext} disabled={index >= (data.length - 1)}>后一题</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Exam;\r\n","import React, {useState} from 'react';\r\nimport Style from './App.module.css';\r\nimport {genQuestionData, Result} from './question';\r\nimport Exam from './exam';\r\n\r\nconst STATUS = {\r\n  INIT:1,\r\n  PLAYING:2,\r\n  END:3\r\n}\r\nfunction App() {\r\n  const [startTime, setStartTime] = useState(0);\r\n  const [endTime, setEndTime] = useState(0);\r\n  // const [count, setCount] = useState(0);\r\n  const [score, setScore] = useState(0);\r\n  const [status, setStatus] = useState(STATUS.INIT);\r\n  const [allQuestionData, setQuestions] = useState([]);\r\n\r\n  function start(type) {\r\n    setQuestions(genAllQuestionData(type));\r\n    setStartTime(new Date().getTime());\r\n    setStatus( STATUS.PLAYING);\r\n  }\r\n  function genAllQuestionData(type){\r\n    return genQuestionData(type);\r\n  }\r\n  function end(){\r\n    setEndTime(new Date().getTime());\r\n    let score =0;\r\n    allQuestionData.forEach(qd => {\r\n      if(!qd.answer){\r\n        return;\r\n      }\r\n      if (qd.isCorrect()) {\r\n        score ++;\r\n      }\r\n    });\r\n    setScore(score);\r\n    setStatus(STATUS.END);\r\n  }\r\n\r\n  function restart(){\r\n    setScore(0);\r\n    setStatus(STATUS.INIT);\r\n  }\r\n\r\n  return (\r\n    <div className={Style.app}>\r\n      \r\n      <header className=\"App-header\">\r\n        {status === STATUS.INIT && (\r\n          <div className={Style.start}>\r\n            <img src=\"./hua.png\" alt=\"hua\"/>\r\n            <div className={Style.welcome}>欢迎参加口算大挑战！</div>\r\n            <button onClick={() => start('20+-')}>二十以内加减法</button>\r\n            <br/>\r\n            <button onClick={() => start('100+-')}>一百以内加减法</button>\r\n            <br/>\r\n            <button onClick={() => start('1000+-')}>一千以内加减法</button>\r\n            <br/>\r\n            <button onClick={() => start('10000+-')}>一万以内加减法</button>\r\n            <br/>\r\n            <button onClick={() => start('99*/')}>九九乘除法</button>\r\n            <br/>\r\n            <button onClick={() => start('+-*/')}>四则运算</button>\r\n            <div className={Style.info}>\r\n              谨以此程序向即忙工作又得完成老师布置的作业的宝爸宝妈们致敬！\r\n              <br/>\r\n              如有遇到问题或者建议请点<a href=\"https://github.com/SpaceSample/kousuan/issues\">这里</a>。\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {status === STATUS.PLAYING && (\r\n          <Exam data={allQuestionData} />\r\n        )}\r\n        {status === STATUS.PLAYING && (\r\n          <button onClick={end}>交卷</button>\r\n        )}\r\n\r\n        {status === STATUS.END && (\r\n          <div className={Style.end}>\r\n            <div>用时<span>{(endTime-startTime)/1000}</span>秒</div>\r\n            <div>共{allQuestionData.length}道题，其中{score}道正确</div>\r\n            {(score < allQuestionData.length/4*3) && (<div>继续努力！<span role=\"img\" aria-label=\"come on\">💪💪💪</span></div>)}\r\n            {(score >= allQuestionData.length/4*3) && (score < allQuestionData.length) && (<div>成绩不错啊！<span role=\"img\" aria-label=\"smile\">🙂🙂🙂</span></div>)}\r\n            {(score === allQuestionData.length) && (<div>你太棒啦，完全正确<span role=\"img\" aria-label=\"great\">👍👍👍</span></div>)}\r\n            <div><button onClick={restart}>重新开始</button></div>\r\n            <div>\r\n              {allQuestionData.map((qd, index) => (<Result data={qd} key={index} />))}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}