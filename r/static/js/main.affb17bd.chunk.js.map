{"version":3,"sources":["question.js","exam.js","App.js","serviceWorker.js","index.js","exam.module.css","question.module.css","App.module.css"],"names":["randomInt","min","max","range","Math","floor","random","QuestionData","n1","n2","operator","this","answer","parseInt","res","AddSubQuestionData","random20","data","MultiDivQuestionData","Error","product","genQuestionData","type","random99","Question","useState","setAnswer","useEffect","str","toString","className","Style","question","value","onChange","e","target","Result","isCorrect","result","isWrong","Exam","index","setIndex","qd","exam","src","alt","onClick","disabled","length","STATUS","INIT","PLAYING","END","App","startTime","setStartTime","endTime","setEndTime","score","setScore","status","setStatus","allQuestionData","setQuestions","start","i","push","genAllQuestionData","Date","getTime","app","welcome","forEach","role","aria-label","map","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"qOAGMA,G,MAAY,SAACC,EAAKC,GACtB,IAAMC,EAAkD,GAAzCD,EAAMD,EAAOC,EAAMD,EAAQA,EAAMC,GAChD,OAAOE,KAAKC,MAAMD,KAAKE,SAAWH,GAASF,IAGvCM,E,WACJ,WAAYC,EAAIC,EAAIC,GAAU,oBAC5BC,KAAKH,GAAKA,EACVG,KAAKF,GAAKA,EACVE,KAAKD,SAAWA,EAChBC,KAAKC,OAAS,G,uDAId,OAAOD,KAAKH,GAAKG,KAAKD,SAAWC,KAAKF,K,kCAItC,MAAuB,KAAhBE,KAAKC,QAAiBC,SAASF,KAAKC,UAAYD,KAAKG,Q,KAI1DC,E,YACJ,WAAYP,EAAIC,EAAIC,GAAU,IAAD,8BAC3B,4CAAMF,EAAIC,EAAIC,KACTI,IAAmB,MAAbJ,EAAoBF,EAAKC,EAAOD,EAAKC,EAFrB,E,2BADEF,GAOjCQ,EAAmBC,SAAW,WAC5B,IAAMR,EAAKR,EAAU,EAAG,IAClBS,EAAKT,EAAU,EAAG,IAClBU,EAAWV,EAAU,EAAG,GAAK,IAAM,IACnCiB,EAAO,IAAIF,EAAmBP,EAAIC,EAAIC,GAC5C,OAAGO,EAAKH,IAAI,GAAKG,EAAKH,IAAI,GACjBC,EAAmBC,WAErBC,G,IAGHC,E,YACJ,WAAYV,EAAIC,EAAIC,GAAU,IAAD,EAG3B,GAH2B,qBAC3B,4CAAMF,EAAIC,EAAIC,KACTI,IAAmB,SAAbJ,EAAoBF,EAAKC,EAAOD,EAAKC,EAC/B,SAAbC,EAAkB,CACpB,GAAW,IAAPD,EACF,MAAM,IAAIU,MAAMX,EAAK,YAEvB,IAAMY,EAAUZ,EAAKC,EACrB,EAAKK,IAAMN,EACX,EAAKA,GAAKY,OAEV,EAAKN,IAAMN,EAAKC,EAXS,S,2BADIF,GAyBnC,SAASc,EAAgBC,GACvB,GAAa,SAATA,EACF,OAAOP,EAAmBC,WACrB,GAAa,SAATM,EACT,OAAOJ,EAAqBK,WAE5B,MAAM,IAAIJ,MAAM,gBAIpB,SAASK,EAAT,GAA0B,IAAPP,EAAM,EAANA,KAAM,EACKQ,mBAAS,IADd,mBAChBb,EADgB,KACRc,EADQ,KAEvBC,qBAAU,WACRD,EAAUT,EAAKL,UACd,CAACK,IACJ,IAAMW,EAAMX,EAAKY,WAAa,MAM9B,OACE,yBAAKC,UAAWC,IAAMC,UAAWJ,EAAI,2BAAON,KAAK,OAAOW,MAAOrB,EAAQsB,SANxD,SAAAC,GACfT,EAAUS,EAAEC,OAAOH,OACnBhB,EAAKL,OAASuB,EAAEC,OAAOH,UAQ3B,SAASI,EAAT,GAAyB,IAARpB,EAAO,EAAPA,KACTqB,EAAYrB,EAAKqB,YACvB,OACE,yBAAKR,UAAWC,IAAMQ,QACpB,0BAAMT,UAAYQ,EAAYP,IAAMO,UAAYP,IAAMS,SAAWvB,EAAKY,WAAa,MAAQZ,EAAKL,SAC9F0B,GAAc,8BAAOrB,EAAKH,MAvClCI,EAAqBK,SAAW,WAC9B,IAAMf,EAAKR,EAAU,EAAG,GAClBS,EAAKT,EAAU,EAAG,GAClBU,EAAWV,EAAU,EAAG,GAAK,OAAM,OAEzC,OADa,IAAIkB,EAAqBV,EAAIC,EAAIC,I,qBCnCjC+B,MAzBf,YAAuB,IAARxB,EAAO,EAAPA,KAAO,EACMQ,mBAAS,GADf,mBACbiB,EADa,KACNC,EADM,KAEdC,EAAK3B,EAAKyB,GAWhB,OACE,yBAAKZ,UAAWC,IAAMc,MACpB,yBAAKC,IAAI,YAAYC,IAAI,QACzB,kBAACvB,EAAD,CAAUP,KAAM2B,EAAIhC,OAAQgC,EAAGhC,SAC/B,6BACE,4BAAQoC,QAfK,WACbN,EAAQ,GACVC,EAASD,EAAQ,IAacO,SAAUP,GAAS,GAAhD,sBACA,4BAAQM,QAXC,WACTN,EAASzB,EAAKiC,OAAS,GACzBP,EAASD,EAAQ,IASUO,SAAUP,GAAUzB,EAAKiC,OAAS,GAA3D,yBClBFC,EAAS,CACbC,KAAK,EACLC,QAAQ,EACRC,IAAI,GAiFSC,MA/Ef,WAAgB,IAAD,EACqB9B,mBAAS,GAD9B,mBACN+B,EADM,KACKC,EADL,OAEiBhC,mBAAS,GAF1B,mBAENiC,EAFM,KAEGC,EAFH,OAIalC,mBAAS,GAJtB,mBAINmC,EAJM,KAICC,EAJD,OAKepC,mBAAS0B,EAAOC,MAL/B,mBAKNU,EALM,KAKEC,EALF,OAM2BtC,mBAAS,IANpC,mBAMNuC,EANM,KAMWC,EANX,KAQb,SAASC,EAAM5C,GACb2C,EAIF,SAA4B3C,GAE1B,IADA,IAAML,EAAO,GACJkD,EAAE,EAAEA,EAAE,GAAGA,IAChBlD,EAAKmD,KAAK/C,EAAgBC,IAE5B,OAAOL,EATMoD,CAAmB/C,IAChCmC,GAAa,IAAIa,MAAOC,WACxBR,EAAWZ,EAAOE,SA6BpB,OACE,yBAAKvB,UAAWC,IAAMyC,KAEpB,4BAAQ1C,UAAU,cACfgC,IAAWX,EAAOC,MACjB,yBAAKtB,UAAWC,IAAMmC,OACpB,yBAAKpB,IAAI,YAAYC,IAAI,QACzB,yBAAKjB,UAAWC,IAAM0C,SAAtB,gEACA,4BAAQzB,QAAS,kBAAMkB,EAAM,UAA7B,8CACA,6BACA,4BAAQlB,QAAS,kBAAMkB,EAAM,UAA7B,mCAIHJ,IAAWX,EAAOE,SACjB,kBAAC,EAAD,CAAMpC,KAAM+C,IAEbF,IAAWX,EAAOE,SACjB,4BAAQL,QAtChB,WACEW,GAAW,IAAIW,MAAOC,WACtB,IAAIX,EAAO,EACXI,EAAgBU,SAAQ,SAAA9B,GAClBA,EAAGhC,QAGHgC,EAAGN,aACLsB,OAGJC,EAASD,GACTG,EAAUZ,EAAOG,OA0BX,gBAGDQ,IAAWX,EAAOG,KACjB,6BACE,4CAAO,+BAAQI,EAAQF,GAAW,KAAlC,UACA,sCAAOQ,EAAgBd,OAAvB,iCAAoCU,EAApC,sBACEA,EAAQI,EAAgBd,OAAO,EAAE,GAAO,8DAAU,0BAAMyB,KAAK,MAAMC,aAAW,WAA5B,yCAClDhB,GAASI,EAAgBd,OAAO,EAAE,GAAOU,EAAQI,EAAgBd,QAAY,oEAAW,0BAAMyB,KAAK,MAAMC,aAAW,SAA5B,yCACxFhB,IAAUI,EAAgBd,QAAY,sFAAc,0BAAMyB,KAAK,MAAMC,aAAW,SAA5B,yCACtD,6BACGZ,EAAgBa,KAAI,SAAAjC,GAAE,OAAK,kBAACP,EAAD,CAAQpB,KAAM2B,QAE5C,6BAAK,4BAAQI,QApCvB,WACEa,EAAS,GACTE,EAAUZ,EAAOC,QAkCJ,iCCrEG0B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB,mBEpInBC,EAAOC,QAAU,CAAC,KAAO,qB,4ECAzBD,EAAOC,QAAU,CAAC,UAAY,4BAA4B,QAAU,0BAA0B,OAAS,yBAAyB,SAAW,6B,kBCA3ID,EAAOC,QAAU,CAAC,IAAM,iBAAiB,MAAQ,mBAAmB,QAAU,wB","file":"static/js/main.affb17bd.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport Style from './question.module.css';\nimport { queryByDisplayValue } from '@testing-library/react';\nconst randomInt = (min, max) => {\n  const range = (max > min ? (max - min) : (min - max)) + 1;\n  return Math.floor(Math.random() * range) + min;\n};\n\nclass QuestionData {\n  constructor(n1, n2, operator){\n    this.n1 = n1;\n    this.n2 = n2;\n    this.operator = operator;\n    this.answer = '';\n  }\n\n  toString(){\n    return this.n1 + this.operator + this.n2;\n  }\n\n  isCorrect(){\n    return this.answer !== '' && parseInt(this.answer) === this.res;\n  }\n}\n\nclass AddSubQuestionData extends QuestionData{\n  constructor(n1, n2, operator){\n    super(n1, n2, operator);\n    this.res = operator === '-' ? (n1 - n2) : (n1 + n2);\n  }\n}\n\nAddSubQuestionData.random20 = () => {\n  const n1 = randomInt(0, 20);\n  const n2 = randomInt(0, 20);\n  const operator = randomInt(0, 1) ? '+' : '-';\n  const data = new AddSubQuestionData(n1, n2, operator);\n  if(data.res<0 || data.res>20){\n    return AddSubQuestionData.random20();\n  }\n  return data;\n}\n\nclass MultiDivQuestionData extends QuestionData{\n  constructor(n1, n2, operator){\n    super(n1, n2, operator);\n    this.res = operator === '÷' ? (n1 / n2) : (n1 * n2);\n    if (operator === '÷') {\n      if (n2 === 0) {\n        throw new Error(n1 + ' ÷ 0?');\n      }\n      const product = n1 * n2;\n      this.res = n1;\n      this.n1 = product;\n    } else {\n      this.res = n1 * n2;\n    }\n  }\n}\n\nMultiDivQuestionData.random99 = () => {\n  const n1 = randomInt(0, 9);\n  const n2 = randomInt(1, 9);\n  const operator = randomInt(0, 1) ? '×' : '÷';\n  const data = new MultiDivQuestionData(n1, n2, operator);\n  return data;\n}\n\nfunction genQuestionData(type) {\n  if (type === '20+-') {\n    return AddSubQuestionData.random20();\n  } else if (type === '99*/') {\n    return MultiDivQuestionData.random99();\n  } else {\n    throw new Error('Unknown type');\n  }\n}\n\nfunction Question({data}){\n  const [answer, setAnswer] = useState('');\n  useEffect(() => {\n    setAnswer(data.answer);\n  }, [data]);\n  const str = data.toString() + ' = ';\n  const onChange = e => {\n    setAnswer(e.target.value);\n    data.answer = e.target.value;\n  };\n\n  return (\n    <div className={Style.question}>{str}<input type=\"text\" value={answer} onChange={onChange}/></div>\n  );\n}\n\nfunction Result({data}) {\n  const isCorrect = data.isCorrect();\n  return (\n    <div className={Style.result}>\n      <span className={(isCorrect ? Style.isCorrect : Style.isWrong)}>{data.toString() + ' = ' + data.answer}</span>\n      {!isCorrect && (<span>{data.res}</span>)}\n    </div>\n  );\n}\n\nexport {Question, genQuestionData, Result};\n","import React, {useState} from 'react';\nimport {Question} from './question';\nimport Style from './exam.module.css';\n\nfunction Exam({data}) {\n  const [index, setIndex] = useState(0);\n  const qd = data[index];\n  const goPrevious = () => {\n    if (index > 0) {\n      setIndex(index - 1);\n    }\n  };\n  const goNext = () => {\n    if (index < (data.length - 1)) {\n      setIndex(index + 1);\n    }\n  };\n  return (\n    <div className={Style.exam}>\n      <img src=\"./hua.png\" alt=\"hua\"/>\n      <Question data={qd} answer={qd.answer}/>\n      <div>\n        <button onClick={goPrevious} disabled={index <= 0}>前一题</button>\n        <button onClick={goNext} disabled={index >= (data.length - 1)}>后一题</button>\n      </div>\n    </div>\n  );\n}\n\nexport default Exam;\n","import React, {useState} from 'react';\nimport Style from './App.module.css';\nimport {genQuestionData, Result} from './question';\nimport Exam from './exam';\n\nconst STATUS = {\n  INIT:1,\n  PLAYING:2,\n  END:3\n}\nfunction App() {\n  const [startTime, setStartTime] = useState(0);\n  const [endTime, setEndTime] = useState(0);\n  // const [count, setCount] = useState(0);\n  const [score, setScore] = useState(0);\n  const [status, setStatus] = useState(STATUS.INIT);\n  const [allQuestionData, setQuestions] = useState([]);\n\n  function start(type) {\n    setQuestions(genAllQuestionData(type));\n    setStartTime(new Date().getTime());\n    setStatus( STATUS.PLAYING);\n  }\n  function genAllQuestionData(type){\n    const data = [];\n    for (let i=0;i<20;i++){\n      data.push(genQuestionData(type)); \n    }\n    return data;\n  }\n  function end(){\n    setEndTime(new Date().getTime());\n    let score =0;\n    allQuestionData.forEach(qd => {\n      if(!qd.answer){\n        return;\n      }\n      if (qd.isCorrect()) {\n        score ++;\n      }\n    });\n    setScore(score);\n    setStatus(STATUS.END);\n  }\n\n  function restart(){\n    setScore(0);\n    setStatus(STATUS.INIT);\n  }\n\n  return (\n    <div className={Style.app}>\n      \n      <header className=\"App-header\">\n        {status === STATUS.INIT && (\n          <div className={Style.start}>\n            <img src=\"./hua.png\" alt=\"hua\"/>\n            <div className={Style.welcome}>欢迎参加口算大挑战！</div>\n            <button onClick={() => start('20+-')}>二十以内加减法</button>\n            <br/>\n            <button onClick={() => start('99*/')}>九九乘除法</button>\n          </div>\n        )}\n\n        {status === STATUS.PLAYING && (\n          <Exam data={allQuestionData} />\n        )}\n        {status === STATUS.PLAYING && (\n          <button onClick={end}>交卷</button>\n        )}\n\n        {status === STATUS.END && (\n          <div>\n            <div>用时<span>{(endTime-startTime)/1000}</span>秒</div>\n            <div>共{allQuestionData.length}道题，其中{score}道正确</div>\n            {(score < allQuestionData.length/4*3) && (<div>继续努力！<span role=\"img\" aria-label=\"come on\">💪💪💪</span></div>)}\n            {(score >= allQuestionData.length/4*3) && (score < allQuestionData.length) && (<div>成绩不错啊！<span role=\"img\" aria-label=\"smile\">🙂🙂🙂</span></div>)}\n            {(score === allQuestionData.length) && (<div>你太棒啦，完全正确<span role=\"img\" aria-label=\"great\">👍👍👍</span></div>)}\n            <div>\n              {allQuestionData.map(qd => (<Result data={qd} />))}\n            </div>\n            <div><button onClick={restart}>重新开始</button></div>\n          </div>\n        )}\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"exam\":\"exam_exam__2GNR-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"isCorrect\":\"question_isCorrect__1BT3L\",\"isWrong\":\"question_isWrong__2rj1S\",\"result\":\"question_result__1BJYc\",\"question\":\"question_question__R0nae\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__1kX79\",\"start\":\"App_start__op5pH\",\"welcome\":\"App_welcome__2u-lC\"};"],"sourceRoot":""}